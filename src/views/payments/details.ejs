<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Trendyol Finans Entegrasyonu</title>
  <link rel="stylesheet" href="/css/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
</head>
<body>
  <%- include('../partials/navbar') %>
  
  <div class="container-fluid mt-4">
    <div class="row mb-4">
      <div class="col">
        <h2>Ödeme Detayları</h2>
        <p class="text-muted">Trendyol ödemelerinize ait detaylı bilgileri görüntüleyin</p>
      </div>
      <div class="col-auto">
        <a href="/" class="btn btn-outline-secondary me-2">
          <i class="bi bi-house"></i> Anasayfa
        </a>
        <button id="refreshData" class="btn btn-outline-primary">
          <i class="bi bi-arrow-clockwise"></i> Yenile
        </button>
      </div>
    </div>

    <!-- Filtreleme Bölümü -->
    <div class="card mb-4">
      <div class="card-header bg-primary text-white">
        <h5 class="mb-0">Filtreleme Seçenekleri</h5>
      </div>
      <div class="card-body">
        <form id="filterForm" method="post" action="/payment-details/filter">
          <div class="row g-3">
            <div class="col-md-3">
              <label for="storeId" class="form-label">Mağaza</label>
              <select class="form-select" id="storeId" name="storeId" required>
                <option value="" selected disabled>Mağaza Seçin</option>
                <% stores.forEach(function(store) { %>
                  <option value="<%= store.id %>" <%= selectedStore == store.id ? 'selected' : '' %>><%= store.name %></option>
                <% }); %>
              </select>
            </div>
            <div class="col-md-3">
              <label for="startDate" class="form-label">Başlangıç Tarihi</label>
              <input type="date" class="form-control" id="startDate" name="startDate" value="<%= startDate %>" required>
            </div>
            <div class="col-md-3">
              <label for="endDate" class="form-label">Bitiş Tarihi</label>
              <input type="date" class="form-control" id="endDate" name="endDate" value="<%= endDate %>" required>
            </div>
            <div class="col-md-3">
              <label for="transactionType" class="form-label">İşlem Tipi</label>
              <select class="form-select" id="transactionType" name="transactionType">
                <option value="">Tümü</option>
                <option value="Satış" <%= transactionType === 'Satış' ? 'selected' : '' %>>Satış</option>
                <option value="İade" <%= transactionType === 'İade' ? 'selected' : '' %>>İade</option>
                <option value="İndirim" <%= transactionType === 'İndirim' ? 'selected' : '' %>>İndirim</option>
                <option value="Kupon" <%= transactionType === 'Kupon' ? 'selected' : '' %>>Kupon</option>
                <option value="Ödeme" <%= transactionType === 'Ödeme' ? 'selected' : '' %>>Ödeme Emri</option>
              </select>
            </div>
            <div class="col-md-3">
              <label for="orderNumber" class="form-label">Sipariş Numarası</label>
              <input type="text" class="form-control" id="orderNumber" name="orderNumber" value="<%= orderNumber || '' %>">
            </div>
            <div class="col-md-3 d-flex align-items-end">
              <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Filtrele
              </button>
              <button type="button" class="btn btn-outline-secondary ms-2" id="clearFilters">
                <i class="bi bi-x-circle"></i> Temizle
              </button>
            </div>
            <div class="col-md-6 d-flex align-items-end justify-content-end">
              <button type="button" class="btn btn-outline-success me-2" id="exportExcel">
                <i class="bi bi-file-excel"></i> Excel
              </button>
              <button type="button" class="btn btn-outline-danger" id="exportPdf">
                <i class="bi bi-file-pdf"></i> PDF
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Sonuç Tablosu -->
    <div class="card">
      <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Ödeme Detayları</h5>
        <span id="recordCount" class="badge bg-light text-dark">
          <%= paymentDetails.length %> kayıt bulundu
        </span>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-striped table-hover" id="paymentDetailsTable">
            <thead>
              <tr>
                <th>ID</th>
                <th>Tarih</th>
                <th>İşlem Tipi</th>
                <th>Sipariş No</th>
                <th>Barkod</th>
                <th>Açıklama</th>
                <th>Borç</th>
                <th>Alacak</th>
                <th>Satıcı Kazancı</th>
                <th>Komisyon Oranı</th>
                <th>Komisyon Tutarı</th>
                <th>Ödeme No</th>
                <th>Ödeme Tarihi</th>
              </tr>
            </thead>
            <tbody>
              <% if (paymentDetails && paymentDetails.length > 0) { %>
                <% paymentDetails.forEach(function(payment) { %>
                  <tr>
                    <td><%= payment.id %></td>
                    <td><%= new Date(payment.transactionDate).toLocaleString('tr-TR') %></td>
                    <td><%= payment.transactionType %></td>
                    <td><%= payment.orderNumber || '-' %></td>
                    <td><%= payment.barcode || '-' %></td>
                    <td><%= payment.description || '-' %></td>
                    <td class="<%= parseFloat(payment.debt) > 0 ? 'text-danger' : '' %>">
                      <%= payment.debt ? parseFloat(payment.debt).toFixed(2) + ' ₺' : '-' %>
                    </td>
                    <td class="<%= parseFloat(payment.credit) > 0 ? 'text-success' : '' %>">
                      <%= payment.credit ? parseFloat(payment.credit).toFixed(2) + ' ₺' : '-' %>
                    </td>
                    <td class="<%= parseFloat(payment.sellerRevenue) > 0 ? 'text-success' : 'text-danger' %>">
                      <%= payment.sellerRevenue ? parseFloat(payment.sellerRevenue).toFixed(2) + ' ₺' : '-' %>
                    </td>
                    <td><%= payment.commissionRate ? '%' + payment.commissionRate : '-' %></td>
                    <td><%= payment.commissionAmount ? parseFloat(payment.commissionAmount).toFixed(2) + ' ₺' : '-' %></td>
                    <td><%= payment.paymentOrderId || '-' %></td>
                    <td><%= payment.paymentDate ? new Date(payment.paymentDate).toLocaleString('tr-TR') : '-' %></td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="13" class="text-center">Kayıt bulunamadı</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/exceljs@4.3.0/dist/exceljs.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const filterForm = document.getElementById('filterForm');
      const clearFiltersBtn = document.getElementById('clearFilters');
      const exportExcelBtn = document.getElementById('exportExcel');
      const exportPdfBtn = document.getElementById('exportPdf');
      const refreshBtn = document.getElementById('refreshData');
      
      // Form gönderimi
      filterForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const storeId = document.getElementById('storeId').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        
        // Tarih kontrolü
        if (startDate && endDate) {
          const start = new Date(startDate);
          const end = new Date(endDate);
          const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24));
          
          if (diffDays > 15) {
            alert('Tarih aralığı en fazla 15 gün olabilir!');
            return;
          }
        }
        
        // Form gönder
        this.submit();
      });
      
      // Filtreleri temizle
      clearFiltersBtn.addEventListener('click', function() {
        document.getElementById('transactionType').value = '';
        document.getElementById('orderNumber').value = '';
        
        // Eğer mağaza ve tarih seçiliyse filtreleme yap
        if (document.getElementById('storeId').value && document.getElementById('startDate').value && document.getElementById('endDate').value) {
          filterForm.submit();
        }
      });
      
      // Excel'e aktar
      exportExcelBtn.addEventListener('click', function() {
        const table = document.getElementById('paymentDetailsTable');
        if (!table.rows.length || table.rows.length === 1) {
          alert('Aktarılacak veri bulunamadı!');
          return;
        }
        
        const workbook = new ExcelJS.Workbook();
        const worksheet = workbook.addWorksheet('Ödeme Detayları');
        
        // Başlık satırı
        const headerRow = worksheet.addRow(Array.from(table.querySelectorAll('thead th')).map(th => th.textContent));
        headerRow.font = { bold: true };
        
        // Veri satırları
        const rows = table.querySelectorAll('tbody tr');
        rows.forEach(row => {
          if (!row.querySelector('td[colspan]')) {  // "Kayıt bulunamadı" satırını kontrol et
            const rowData = Array.from(row.querySelectorAll('td')).map(td => td.textContent.trim());
            worksheet.addRow(rowData);
          }
        });
        
        // Tüm sütunları otomatik boyutlandır
        worksheet.columns.forEach(column => {
          column.width = 15;
        });
        
        // Excel dosyasını indir
        workbook.xlsx.writeBuffer().then(buffer => {
          const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          a.download = 'Ödeme_Detayları.xlsx';
          a.click();
          window.URL.revokeObjectURL(url);
        });
      });
      
      // PDF'e aktar
      exportPdfBtn.addEventListener('click', function() {
        const table = document.getElementById('paymentDetailsTable');
        if (!table.rows.length || table.rows.length === 1) {
          alert('Aktarılacak veri bulunamadı!');
          return;
        }
        
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF('l', 'mm', 'a4');
        
        // Başlık
        doc.setFontSize(18);
        doc.text('Ödeme Detayları', 14, 22);
        
        // Tarih aralığı
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        doc.setFontSize(12);
        doc.text(`Tarih: ${startDate} - ${endDate}`, 14, 32);
        
        // Tabloyu PDF'e ekle
        doc.autoTable({
          html: '#paymentDetailsTable',
          startY: 40,
          styles: { fontSize: 8 },
          columnStyles: { 0: { cellWidth: 20 } }, // ID sütunu için genişlik
          margin: { top: 40, right: 14, bottom: 20, left: 14 }
        });
        
        // PDF'i indir
        doc.save('Ödeme_Detayları.pdf');
      });
      
      // Verileri yenile
      refreshBtn.addEventListener('click', function() {
        if (filterForm.checkValidity()) {
          filterForm.submit();
        } else {
          alert('Lütfen mağaza ve tarih aralığı seçin!');
        }
      });
      
      // Tarih aralığı kontrol et
      document.getElementById('endDate').addEventListener('change', function() {
        const startDate = new Date(document.getElementById('startDate').value);
        const endDate = new Date(this.value);
        const diffDays = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));
        
        if (diffDays > 15) {
          alert('Uyarı: Tarih aralığı 15 günden fazla. Trendyol API, 15 günden uzun sorgulara izin vermez.');
        }
      });
    });
  </script>
</body>
</html>